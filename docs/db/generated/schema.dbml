//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table users {
  id Int [pk, increment]
  password String [not null]
  firstName String [not null]
  lastName String
  email String [unique, not null]
  profilePictureName String [not null, default: 'default-avatar.png']
  isEmailVerified Boolean [not null, default: false]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  refreshTokenNonces refresh_token_nonces [not null]
  ownedCompany companies
}

Table refresh_token_nonces {
  id Int [pk, increment]
  userId Int [not null]
  nonce String [not null]
  createdAt DateTime [default: `now()`, not null]
  user users [not null]
}

Table companies {
  id Int [pk, increment]
  ownerId Int [unique, not null]
  email String [unique, not null]
  title String [not null]
  description String [not null]
  logoName String [not null, default: 'default-logo.png']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  owner users [not null]
}

Table tickets {
  id Int [pk, increment]
  eventId Int [not null]
  title String [not null]
  number String [unique, not null]
  price Decimal [not null, default: 0]
  status TicketStatus [not null, default: 'AVAILABLE']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  name String [not null]
}

Enum TicketStatus {
  SOLD
  RESERVED
  AVAILABLE
}

Ref: refresh_token_nonces.userId > users.id [delete: Cascade]

Ref: companies.ownerId - users.id [delete: Restrict]